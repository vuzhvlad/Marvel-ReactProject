{"ast":null,"code":"var _jsxFileName = \"/Users/vuzhvlad/Desktop/devStudy/React/project1 marvel Hooks/marvel/src/components/errBoundary/ErrorBoundary.js\";\nimport { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMsg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n  componentDidCatch(err, info) {\n    // hook for catching errors that takes two param inside, error- error, info - the place where it happened\n    console.log(err, info);\n    this.setState({\n      error: true\n    }); // if mistake happened error will be true\n  }\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n    return this.props.children; // children of ErrorBoundary\n  }\n}\nexport default ErrorBoundary;\n\n// it can catch mistakes inside of it childrens, render and constructor, but it cant catch a mistake inside of events, async code and inside of itself!!!!!!!!!!!!!!","map":{"version":3,"names":["Component","ErrorMessage","jsxDEV","_jsxDEV","ErrorBoundary","constructor","args","state","error","componentDidCatch","err","info","console","log","setState","render","fileName","_jsxFileName","lineNumber","columnNumber","props","children"],"sources":["/Users/vuzhvlad/Desktop/devStudy/React/project1 marvel Hooks/marvel/src/components/errBoundary/ErrorBoundary.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMsg\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(err, info) { // hook for catching errors that takes two param inside, error- error, info - the place where it happened\r\n        console.log(err, info);\r\n\r\n        this.setState({error: true}); // if mistake happened error will be true\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children; // children of ErrorBoundary\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n// it can catch mistakes inside of it childrens, render and constructor, but it cant catch a mistake inside of events, async code and inside of itself!!!!!!!!!!!!!!"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAClCC,KAAK,GAAG;MACJC,KAAK,EAAE;IACX,CAAC;EAAA;EAEDC,iBAAiBA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAAE;IAC3BC,OAAO,CAACC,GAAG,CAACH,GAAG,EAAEC,IAAI,CAAC;IAEtB,IAAI,CAACG,QAAQ,CAAC;MAACN,KAAK,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC;EAClC;EAEAO,MAAMA,CAAA,EAAG;IACL,IAAG,IAAI,CAACR,KAAK,CAACC,KAAK,EAAE;MACjB,oBAAOL,OAAA,CAACF,YAAY;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAC1B;IAEA,OAAO,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC;EAChC;AACJ;AAEA,eAAejB,aAAa;;AAE5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}