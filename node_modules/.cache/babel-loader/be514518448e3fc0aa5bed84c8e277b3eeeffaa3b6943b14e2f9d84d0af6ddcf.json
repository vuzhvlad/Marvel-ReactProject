{"ast":null,"code":"var _jsxFileName = \"/Users/vuzhvlad/Desktop/devStudy/React/project1 marvel Hooks/marvel/src/components/charList/CharList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport Spinner from '../spinner/PicSpinner';\nimport ErrorMessage from '../errorMessage/ErrorMsg';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharList = props => {\n  _s();\n  //all states\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const {\n    loading,\n    error,\n    getAllCharacters\n  } = useMarvelService(); // service for getting character\n\n  useEffect(() => {\n    // for mounting once it is rendered\n    onRequest(offset, true);\n  }, []);\n  const onRequest = (offset, initial) => {\n    // getting charcters\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    const filteredChars = newCharList.filter(newChar => {\n      return charList.find(oldChar => {\n        return oldChar.id === newChar.id;\n      }) === undefined;\n    });\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 18);\n    setCharEnded(charEnded => ended);\n  };\n  const itemRefs = useRef([]); // creating ref\n\n  const focusOnItem = id => {\n    // method that calls after click on char\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected')); // we are removing active class from all characters\n    itemRefs.current[id].classList.add('char__item_selected'); // then we put active class on item with special id we clicked on\n    itemRefs.current[id].focus(); // then we put focus on this character\n  };\n  function renderItems(arr) {\n    // fucntion for rendering all characters\n    const items = arr.map((item, i) => {\n      // function for creating every item\n\n      let imgStyle = {\n        'objectFit': 'cover'\n      }; // for items without images\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        ref: el => itemRefs.current[i] = el // formatting ref inside for every element \n        ,\n\n        onClick: () => {\n          props.onCharSelected(item.id); // after clicking we select item on id we ve got from props and send it to charInfo\n          focusOnItem(i); // make focus on the item we clicked on\n        },\n        onKeyDown: e => {\n          // event for presing key\n          if (e.key === ' ' || e.key === \"Enter\") {\n            // for pressing enter\n            props.onCharSelected(item.id); // doing the same stuff just make our page a bit more interactive\n            focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  } // returning structure where all characters are inside\n\n  const items = renderItems(charList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading && !newItemLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 50\n  }, this) : null;\n  console.log(\"charList\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [errorMessage, spinner, items, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(CharList, \"HpVx0KVk6dCvMevWoOlsw1EGqYE=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharList;\nexport default CharList;\nvar _c;\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"names":["useState","useEffect","useRef","Spinner","ErrorMessage","useMarvelService","jsxDEV","_jsxDEV","CharList","props","_s","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","loading","error","getAllCharacters","onRequest","initial","then","onCharListLoaded","newCharList","ended","length","filteredChars","filter","newChar","find","oldChar","id","undefined","itemRefs","focusOnItem","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","thumbnail","className","tabIndex","ref","el","onClick","onCharSelected","onKeyDown","e","key","children","src","alt","name","style","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","spinner","console","log","disabled","_c","$RefreshReg$"],"sources":["/Users/vuzhvlad/Desktop/devStudy/React/project1 marvel Hooks/marvel/src/components/charList/CharList.js"],"sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport Spinner from '../spinner/PicSpinner';\nimport ErrorMessage from '../errorMessage/ErrorMsg';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\n\nconst CharList = (props) => {\n\n    //all states\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService(); // service for getting character\n\n    useEffect(() => { // for mounting once it is rendered\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {  // getting charcters\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n        .then(onCharListLoaded) \n    }\n\n    const onCharListLoaded = (newCharList) => { \n        \n        let ended = false;\n        if(newCharList.length < 9) { \n            ended = true;\n        }   \n\n        const filteredChars = newCharList.filter((newChar) => {\n            return charList.find((oldChar) => {\n                return oldChar.id === newChar.id;\n            }) === undefined;\n        });\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 18);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]); // creating ref\n\n    const focusOnItem = (id) => { // method that calls after click on char\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected')); // we are removing active class from all characters\n        itemRefs.current[id].classList.add('char__item_selected'); // then we put active class on item with special id we clicked on\n        itemRefs.current[id].focus(); // then we put focus on this character\n    }\n\n    function renderItems(arr) { // fucntion for rendering all characters\n        const items =  arr.map((item, i) => { // function for creating every item\n\n            let imgStyle = {'objectFit' : 'cover'}; // for items without images\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el} // formatting ref inside for every element \n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id); // after clicking we select item on id we ve got from props and send it to charInfo\n                        focusOnItem(i); // make focus on the item we clicked on\n                        }}\n\n                    onKeyDown={(e) => { // event for presing key\n                        if(e.key === ' ' || e.key === \"Enter\") { // for pressing enter\n                            props.onCharSelected(item.id); // doing the same stuff just make our page a bit more interactive\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    } // returning structure where all characters are inside\n\n    const items = renderItems(charList); \n\n            \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    console.log(\"charList\");\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default CharList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}