{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {\n    'Content-Type': 'application/json'\n  }) => {\n    // we put this function inside of useCallback cause we predict that it wont be needed to be called when page rerenders every time, also it is async because it is request\n\n    setLoading(true); // starting loading\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      }); // we sent a fetch by url and setting inside of the object\n\n      if (!response.ok) {\n        // we are checking if response is okay if it is not we are going to catch\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n      }\n      const data = await response.json(); // transfer our response from json to normal js\n\n      setLoading(false); //everything is uploaded so loading is false\n      return data;\n    } catch (e) {\n      setLoading(false); // stopping loading\n      setError(e.message); // sending the message of our error that we ve got\n      throw e; // throwing error\n    }\n  }, []); // function for creating request\n\n  const clearError = useCallback(() => setError(null), []); // function for setting error to null again\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n_s(useHttp, \"wBqGcGl6EafFNGt940fH8x5vtvA=\");","map":{"version":3,"names":["useState","useCallback","useHttp","_s","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","clearError"],"sources":["/Users/vuzhvlad/Desktop/devStudy/React/project1 marvel Hooks/marvel/src/hooks/http.hook.js"],"sourcesContent":["import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => { // we put this function inside of useCallback cause we predict that it wont be needed to be called when page rerenders every time, also it is async because it is request\r\n\r\n        setLoading(true); // starting loading\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers}); // we sent a fetch by url and setting inside of the object\r\n\r\n            if(!response.ok) { // we are checking if response is okay if it is not we are going to catch\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json(); // transfer our response from json to normal js\r\n\r\n            setLoading(false); //everything is uploaded so loading is false\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false); // stopping loading\r\n            setError(e.message); // sending the message of our error that we ve got\r\n            throw e; // throwing error\r\n        }\r\n\r\n    }, []); // function for creating request\r\n\r\n    const clearError = useCallback(() => setError(null), []); // function for setting error to null again\r\n\r\n    return {loading, request, error, clearError}\r\n}"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAE3C,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,OAAO,GAAGP,WAAW,CAAC,OAAOQ,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,OAAO,GAAG;IAAC,cAAc,EAAE;EAAkB,CAAC,KAAK;IAAE;;IAEtHP,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;IAElB,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;QAACC,MAAM;QAAEC,IAAI;QAAEC;MAAO,CAAC,CAAC,CAAC,CAAC;;MAE5D,IAAG,CAACC,QAAQ,CAACE,EAAE,EAAE;QAAE;QACf,MAAM,IAAIC,KAAK,CAAE,mBAAkBP,GAAI,aAAYI,QAAQ,CAACI,MAAO,EAAC,CAAC;MACzE;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEpCd,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnB,OAAOa,IAAI;IAEf,CAAC,CAAC,OAAME,CAAC,EAAE;MACPf,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnBE,QAAQ,CAACa,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;MACrB,MAAMD,CAAC,CAAC,CAAC;IACb;EAEJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAME,UAAU,GAAGrB,WAAW,CAAC,MAAMM,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAE1D,OAAO;IAACH,OAAO;IAAEI,OAAO;IAAEF,KAAK;IAAEgB;EAAU,CAAC;AAChD,CAAC;AAAAnB,EAAA,CA/BYD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}